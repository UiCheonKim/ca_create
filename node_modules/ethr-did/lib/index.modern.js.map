{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["import { createJWT, ES256KSigner, JWTVerified, Signer as JWTSigner, verifyJWT } from 'did-jwt'\nimport { Signer as TxSigner } from '@ethersproject/abstract-signer'\nimport { CallOverrides } from '@ethersproject/contracts'\nimport { computeAddress } from '@ethersproject/transactions'\nimport { computePublicKey } from '@ethersproject/signing-key'\nimport { Provider } from '@ethersproject/providers'\nimport { Wallet } from '@ethersproject/wallet'\nimport * as base64 from '@ethersproject/base64'\nimport { hexlify, hexValue, isBytes } from '@ethersproject/bytes'\nimport { Base58 } from '@ethersproject/basex'\nimport { toUtf8Bytes } from '@ethersproject/strings'\nimport { EthrDidController, interpretIdentifier, REGISTRY } from 'ethr-did-resolver'\nimport { Resolvable } from 'did-resolver'\n\nexport enum DelegateTypes {\n  veriKey = 'veriKey',\n  sigAuth = 'sigAuth',\n  enc = 'enc',\n}\n\ninterface IConfig {\n  identifier: string\n  chainNameOrId?: string | number\n\n  registry?: string\n\n  signer?: JWTSigner\n  alg?: 'ES256K' | 'ES256K-R'\n  txSigner?: TxSigner\n  privateKey?: string\n\n  rpcUrl?: string\n  provider?: Provider\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  web3?: any\n}\n\nexport type KeyPair = {\n  address: string\n  privateKey: string\n  publicKey: string\n  identifier: string\n}\n\ntype DelegateOptions = {\n  delegateType?: DelegateTypes\n  expiresIn?: number\n}\n\nexport class EthrDID {\n  public did: string\n  public address: string\n  public signer?: JWTSigner\n  public alg?: 'ES256K' | 'ES256K-R'\n  private owner?: string\n  private controller?: EthrDidController\n\n  constructor(conf: IConfig) {\n    const { address, publicKey, network } = interpretIdentifier(conf.identifier)\n    const chainNameOrId = typeof conf.chainNameOrId === 'number' ? hexValue(conf.chainNameOrId) : conf.chainNameOrId\n    if (conf.provider || conf.rpcUrl || conf.web3) {\n      let txSigner = conf.txSigner\n      if (conf.privateKey && typeof txSigner === 'undefined') {\n        txSigner = new Wallet(conf.privateKey)\n      }\n      this.controller = new EthrDidController(\n        conf.identifier,\n        undefined,\n        txSigner,\n        chainNameOrId,\n        conf.provider || conf.web3?.currentProvider,\n        conf.rpcUrl,\n        conf.registry || REGISTRY\n      )\n      this.did = this.controller.did\n    } else {\n      const net = network || chainNameOrId\n      let networkString = net ? `${net}:` : ''\n      if (networkString in ['mainnet:', '0x1:']) {\n        networkString = ''\n      }\n      this.did =\n        typeof publicKey === 'string' ? `did:ethr:${networkString}${publicKey}` : `did:ethr:${networkString}${address}`\n    }\n    this.address = address\n    if (conf.signer) {\n      this.signer = conf.signer\n      this.alg = conf.alg\n      if (!this.alg) {\n        console.warn(\n          'A JWT signer was specified but no algorithm was set. Please set the `alg` parameter when calling `new EthrDID()`'\n        )\n      }\n    } else if (conf.privateKey) {\n      this.signer = ES256KSigner(conf.privateKey, true)\n      this.alg = 'ES256K-R'\n    }\n  }\n\n  static createKeyPair(chainNameOrId?: string | number): KeyPair {\n    const wallet = Wallet.createRandom()\n    const privateKey = wallet.privateKey\n    const address = computeAddress(privateKey)\n    const publicKey = computePublicKey(privateKey, true)\n    const net = typeof chainNameOrId === 'number' ? hexValue(chainNameOrId) : chainNameOrId\n    const identifier = net ? `did:ethr:${net}:${publicKey}` : publicKey\n    return { address, privateKey, publicKey, identifier }\n  }\n\n  async lookupOwner(cache = true): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    if (cache && this.owner) return this.owner\n    return this.controller?.getOwner(this.address)\n  }\n\n  async changeOwner(newOwner: string, txOptions?: CallOverrides): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.changeOwner(newOwner, {\n      ...txOptions,\n      from: owner,\n    })\n    this.owner = newOwner\n    return receipt.transactionHash\n  }\n\n  async addDelegate(\n    delegate: string,\n    delegateOptions?: DelegateOptions,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.addDelegate(\n      delegateOptions?.delegateType || DelegateTypes.veriKey,\n      delegate,\n      delegateOptions?.expiresIn || 86400,\n      { ...txOptions, from: owner }\n    )\n    return receipt.transactionHash\n  }\n\n  async revokeDelegate(\n    delegate: string,\n    delegateType = DelegateTypes.veriKey,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.revokeDelegate(delegateType, delegate, { ...txOptions, from: owner })\n    return receipt.transactionHash\n  }\n\n  async setAttribute(\n    key: string,\n    value: string | Uint8Array,\n    expiresIn = 86400,\n    /** @deprecated, please use txOptions.gasLimit */\n    gasLimit?: number,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.setAttribute(key, attributeToHex(key, value), expiresIn, {\n      gasLimit,\n      ...txOptions,\n      from: owner,\n    })\n    return receipt.transactionHash\n  }\n\n  async revokeAttribute(\n    key: string,\n    value: string | Uint8Array,\n    /** @deprecated please use `txOptions.gasLimit` */\n    gasLimit?: number,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.revokeAttribute(key, attributeToHex(key, value), {\n      gasLimit,\n      ...txOptions,\n      from: owner,\n    })\n    return receipt.transactionHash\n  }\n\n  // Create a temporary signing delegate able to sign JWT on behalf of identity\n  async createSigningDelegate(\n    delegateType = DelegateTypes.veriKey,\n    expiresIn = 86400\n  ): Promise<{ kp: KeyPair; txHash: string }> {\n    const kp = EthrDID.createKeyPair()\n    this.signer = ES256KSigner(kp.privateKey, true)\n    const txHash = await this.addDelegate(kp.address, {\n      delegateType,\n      expiresIn,\n    })\n    return { kp, txHash }\n  }\n\n  // eslint-disable-next-line\n  async signJWT(payload: any, expiresIn?: number): Promise<string> {\n    if (typeof this.signer !== 'function') {\n      throw new Error('No signer configured')\n    }\n    const options = {\n      signer: this.signer,\n      alg: 'ES256K-R',\n      issuer: this.did,\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (expiresIn) (<any>options)['expiresIn'] = expiresIn\n    return createJWT(payload, options)\n  }\n\n  async verifyJWT(jwt: string, resolver: Resolvable, audience = this.did): Promise<JWTVerified> {\n    return verifyJWT(jwt, { resolver, audience })\n  }\n}\n\nfunction attributeToHex(key: string, value: string | Uint8Array): string {\n  if (value instanceof Uint8Array || isBytes(value)) {\n    return hexlify(value)\n  }\n  const matchKeyWithEncoding = key.match(/^did\\/(pub|auth|svc)\\/(\\w+)(\\/(\\w+))?(\\/(\\w+))?$/)\n  const encoding = matchKeyWithEncoding?.[6]\n  const matchHexString = (<string>value).match(/^0x[0-9a-fA-F]*$/)\n  if (encoding && !matchHexString) {\n    if (encoding === 'base64') {\n      return hexlify(base64.decode(value))\n    }\n    if (encoding === 'base58') {\n      return hexlify(Base58.decode(value))\n    }\n  } else if (matchHexString) {\n    return <string>value\n  }\n\n  return hexlify(toUtf8Bytes(value))\n}\n"],"names":["DelegateTypes","EthrDID","constructor","conf","did","address","signer","alg","owner","controller","publicKey","network","interpretIdentifier","identifier","chainNameOrId","hexValue","provider","rpcUrl","web3","txSigner","privateKey","Wallet","EthrDidController","undefined","currentProvider","registry","REGISTRY","net","networkString","console","warn","ES256KSigner","createKeyPair","wallet","createRandom","computeAddress","computePublicKey","lookupOwner","cache","Error","getOwner","changeOwner","newOwner","txOptions","receipt","from","transactionHash","addDelegate","delegate","delegateOptions","delegateType","veriKey","expiresIn","revokeDelegate","setAttribute","key","value","gasLimit","attributeToHex","revokeAttribute","createSigningDelegate","kp","txHash","signJWT","payload","options","issuer","createJWT","verifyJWT","jwt","resolver","audience","Uint8Array","isBytes","hexlify","matchKeyWithEncoding","match","encoding","matchHexString","base64","decode","Base58","toUtf8Bytes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;IAcYA;;AAAZ,WAAYA;AACVA,EAAAA,wBAAA,YAAA;AACAA,EAAAA,wBAAA,YAAA;AACAA,EAAAA,oBAAA,QAAA;AACD,CAJD,EAAYA,aAAa,KAAbA,aAAa,KAAA,CAAzB;;MAmCaC;AAQXC,EAAAA,YAAYC;SAPLC;SACAC;SACAC;SACAC;SACCC;SACAC;AAGN,UAAM;AAAEJ,MAAAA,OAAF;AAAWK,MAAAA,SAAX;AAAsBC,MAAAA;AAAtB,QAAkCC,mBAAmB,CAACT,IAAI,CAACU,UAAN,CAA3D;AACA,UAAMC,aAAa,GAAG,OAAOX,IAAI,CAACW,aAAZ,KAA8B,QAA9B,GAAyCC,QAAQ,CAACZ,IAAI,CAACW,aAAN,CAAjD,GAAwEX,IAAI,CAACW,aAAnG;;AACA,QAAIX,IAAI,CAACa,QAAL,IAAiBb,IAAI,CAACc,MAAtB,IAAgCd,IAAI,CAACe,IAAzC,EAA+C;AAAA;;AAC7C,UAAIC,QAAQ,GAAGhB,IAAI,CAACgB,QAApB;;AACA,UAAIhB,IAAI,CAACiB,UAAL,IAAmB,OAAOD,QAAP,KAAoB,WAA3C,EAAwD;AACtDA,QAAAA,QAAQ,GAAG,IAAIE,MAAJ,CAAWlB,IAAI,CAACiB,UAAhB,CAAX;AACD;;AACD,WAAKX,UAAL,GAAkB,IAAIa,iBAAJ,CAChBnB,IAAI,CAACU,UADW,EAEhBU,SAFgB,EAGhBJ,QAHgB,EAIhBL,aAJgB,EAKhBX,IAAI,CAACa,QAAL,kBAAiBb,IAAI,CAACe,IAAtB,qBAAiB,UAAWM,eAA5B,CALgB,EAMhBrB,IAAI,CAACc,MANW,EAOhBd,IAAI,CAACsB,QAAL,IAAiBC,QAPD,CAAlB;AASA,WAAKtB,GAAL,GAAW,KAAKK,UAAL,CAAgBL,GAA3B;AACD,KAfD,MAeO;AACL,YAAMuB,GAAG,GAAGhB,OAAO,IAAIG,aAAvB;AACA,UAAIc,aAAa,GAAGD,GAAG,MAAMA,MAAN,GAAe,EAAtC;;AACA,UAAIC,aAAa,IAAI,CAAC,UAAD,EAAa,MAAb,CAArB,EAA2C;AACzCA,QAAAA,aAAa,GAAG,EAAhB;AACD;;AACD,WAAKxB,GAAL,GACE,OAAOM,SAAP,KAAqB,QAArB,eAA4CkB,gBAAgBlB,WAA5D,eAAsFkB,gBAAgBvB,SADxG;AAED;;AACD,SAAKA,OAAL,GAAeA,OAAf;;AACA,QAAIF,IAAI,CAACG,MAAT,EAAiB;AACf,WAAKA,MAAL,GAAcH,IAAI,CAACG,MAAnB;AACA,WAAKC,GAAL,GAAWJ,IAAI,CAACI,GAAhB;;AACA,UAAI,CAAC,KAAKA,GAAV,EAAe;AACbsB,QAAAA,OAAO,CAACC,IAAR,CACE,kHADF;AAGD;AACF,KARD,MAQO,IAAI3B,IAAI,CAACiB,UAAT,EAAqB;AAC1B,WAAKd,MAAL,GAAcyB,YAAY,CAAC5B,IAAI,CAACiB,UAAN,EAAkB,IAAlB,CAA1B;AACA,WAAKb,GAAL,GAAW,UAAX;AACD;AACF;;AAEmB,SAAbyB,aAAa,CAAClB,aAAD;AAClB,UAAMmB,MAAM,GAAGZ,MAAM,CAACa,YAAP,EAAf;AACA,UAAMd,UAAU,GAAGa,MAAM,CAACb,UAA1B;AACA,UAAMf,OAAO,GAAG8B,cAAc,CAACf,UAAD,CAA9B;AACA,UAAMV,SAAS,GAAG0B,gBAAgB,CAAChB,UAAD,EAAa,IAAb,CAAlC;AACA,UAAMO,GAAG,GAAG,OAAOb,aAAP,KAAyB,QAAzB,GAAoCC,QAAQ,CAACD,aAAD,CAA5C,GAA8DA,aAA1E;AACA,UAAMD,UAAU,GAAGc,GAAG,eAAeA,OAAOjB,WAAtB,GAAoCA,SAA1D;AACA,WAAO;AAAEL,MAAAA,OAAF;AAAWe,MAAAA,UAAX;AAAuBV,MAAAA,SAAvB;AAAkCG,MAAAA;AAAlC,KAAP;AACD;;AAEgB,QAAXwB,WAAW,CAACC,KAAK,GAAG,IAAT;;;AACf,QAAI,OAAO,KAAK7B,UAAZ,KAA2B,WAA/B,EAA4C;AAC1C,YAAM,IAAI8B,KAAJ,CAAU,gEAAV,CAAN;AACD;;AACD,QAAID,KAAK,IAAI,KAAK9B,KAAlB,EAAyB,OAAO,KAAKA,KAAZ;AACzB,+BAAO,KAAKC,UAAZ,qBAAO,iBAAiB+B,QAAjB,CAA0B,KAAKnC,OAA/B,CAAP;AACD;;AAEgB,QAAXoC,WAAW,CAACC,QAAD,EAAmBC,SAAnB;AACf,QAAI,OAAO,KAAKlC,UAAZ,KAA2B,WAA/B,EAA4C;AAC1C,YAAM,IAAI8B,KAAJ,CAAU,gEAAV,CAAN;AACD;;AACD,UAAM/B,KAAK,GAAG,MAAM,KAAK6B,WAAL,EAApB;AACA,UAAMO,OAAO,GAAG,MAAM,KAAKnC,UAAL,CAAgBgC,WAAhB,CAA4BC,QAA5B,eACjBC,SADiB;AAEpBE,MAAAA,IAAI,EAAErC;AAFc,OAAtB;AAIA,SAAKA,KAAL,GAAakC,QAAb;AACA,WAAOE,OAAO,CAACE,eAAf;AACD;;AAEgB,QAAXC,WAAW,CACfC,QADe,EAEfC,eAFe,EAGfN,YAA2B,EAHZ;AAKf,QAAI,OAAO,KAAKlC,UAAZ,KAA2B,WAA/B,EAA4C;AAC1C,YAAM,IAAI8B,KAAJ,CAAU,gEAAV,CAAN;AACD;;AACD,UAAM/B,KAAK,GAAG,MAAM,KAAK6B,WAAL,EAApB;AACA,UAAMO,OAAO,GAAG,MAAM,KAAKnC,UAAL,CAAgBsC,WAAhB,CACpB,CAAAE,eAAe,QAAf,YAAAA,eAAe,CAAEC,YAAjB,KAAiClD,aAAa,CAACmD,OAD3B,EAEpBH,QAFoB,EAGpB,CAAAC,eAAe,QAAf,YAAAA,eAAe,CAAEG,SAAjB,KAA8B,KAHV,eAIfT,SAJe;AAIJE,MAAAA,IAAI,EAAErC;AAJF,OAAtB;AAMA,WAAOoC,OAAO,CAACE,eAAf;AACD;;AAEmB,QAAdO,cAAc,CAClBL,QADkB,EAElBE,YAAY,GAAGlD,aAAa,CAACmD,OAFX,EAGlBR,YAA2B,EAHT;AAKlB,QAAI,OAAO,KAAKlC,UAAZ,KAA2B,WAA/B,EAA4C;AAC1C,YAAM,IAAI8B,KAAJ,CAAU,gEAAV,CAAN;AACD;;AACD,UAAM/B,KAAK,GAAG,MAAM,KAAK6B,WAAL,EAApB;AACA,UAAMO,OAAO,GAAG,MAAM,KAAKnC,UAAL,CAAgB4C,cAAhB,CAA+BH,YAA/B,EAA6CF,QAA7C,eAA4DL,SAA5D;AAAuEE,MAAAA,IAAI,EAAErC;AAA7E,OAAtB;AACA,WAAOoC,OAAO,CAACE,eAAf;AACD;;AAEiB,QAAZQ,YAAY,CAChBC,GADgB,EAEhBC,KAFgB,EAGhBJ,SAAS,GAAG,KAHI;AAIhB;AACAK,EAAAA,QALgB,EAMhBd,YAA2B,EANX;AAQhB,QAAI,OAAO,KAAKlC,UAAZ,KAA2B,WAA/B,EAA4C;AAC1C,YAAM,IAAI8B,KAAJ,CAAU,gEAAV,CAAN;AACD;;AACD,UAAM/B,KAAK,GAAG,MAAM,KAAK6B,WAAL,EAApB;AACA,UAAMO,OAAO,GAAG,MAAM,KAAKnC,UAAL,CAAgB6C,YAAhB,CAA6BC,GAA7B,EAAkCG,cAAc,CAACH,GAAD,EAAMC,KAAN,CAAhD,EAA8DJ,SAA9D;AACpBK,MAAAA;AADoB,OAEjBd,SAFiB;AAGpBE,MAAAA,IAAI,EAAErC;AAHc,OAAtB;AAKA,WAAOoC,OAAO,CAACE,eAAf;AACD;;AAEoB,QAAfa,eAAe,CACnBJ,GADmB,EAEnBC,KAFmB;AAGnB;AACAC,EAAAA,QAJmB,EAKnBd,YAA2B,EALR;AAOnB,QAAI,OAAO,KAAKlC,UAAZ,KAA2B,WAA/B,EAA4C;AAC1C,YAAM,IAAI8B,KAAJ,CAAU,gEAAV,CAAN;AACD;;AACD,UAAM/B,KAAK,GAAG,MAAM,KAAK6B,WAAL,EAApB;AACA,UAAMO,OAAO,GAAG,MAAM,KAAKnC,UAAL,CAAgBkD,eAAhB,CAAgCJ,GAAhC,EAAqCG,cAAc,CAACH,GAAD,EAAMC,KAAN,CAAnD;AACpBC,MAAAA;AADoB,OAEjBd,SAFiB;AAGpBE,MAAAA,IAAI,EAAErC;AAHc,OAAtB;AAKA,WAAOoC,OAAO,CAACE,eAAf;AACD;;;AAG0B,QAArBc,qBAAqB,CACzBV,YAAY,GAAGlD,aAAa,CAACmD,OADJ,EAEzBC,SAAS,GAAG,KAFa;AAIzB,UAAMS,EAAE,GAAG5D,OAAO,CAAC+B,aAAR,EAAX;AACA,SAAK1B,MAAL,GAAcyB,YAAY,CAAC8B,EAAE,CAACzC,UAAJ,EAAgB,IAAhB,CAA1B;AACA,UAAM0C,MAAM,GAAG,MAAM,KAAKf,WAAL,CAAiBc,EAAE,CAACxD,OAApB,EAA6B;AAChD6C,MAAAA,YADgD;AAEhDE,MAAAA;AAFgD,KAA7B,CAArB;AAIA,WAAO;AAAES,MAAAA,EAAF;AAAMC,MAAAA;AAAN,KAAP;AACD;;;AAGY,QAAPC,OAAO,CAACC,OAAD,EAAeZ,SAAf;AACX,QAAI,OAAO,KAAK9C,MAAZ,KAAuB,UAA3B,EAAuC;AACrC,YAAM,IAAIiC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AACD,UAAM0B,OAAO,GAAG;AACd3D,MAAAA,MAAM,EAAE,KAAKA,MADC;AAEdC,MAAAA,GAAG,EAAE,UAFS;AAGd2D,MAAAA,MAAM,EAAE,KAAK9D;AAHC,KAAhB;;AAMA,QAAIgD,SAAJ,EAAqBa,OAAQ,CAAC,WAAD,CAAR,GAAwBb,SAAxB;AACrB,WAAOe,SAAS,CAACH,OAAD,EAAUC,OAAV,CAAhB;AACD;;AAEc,QAATG,SAAS,CAACC,GAAD,EAAcC,QAAd,EAAoCC,QAAQ,GAAG,KAAKnE,GAApD;AACb,WAAOgE,SAAS,CAACC,GAAD,EAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAN,CAAhB;AACD;;;;AAGH,SAASb,cAAT,CAAwBH,GAAxB,EAAqCC,KAArC;AACE,MAAIA,KAAK,YAAYgB,UAAjB,IAA+BC,OAAO,CAACjB,KAAD,CAA1C,EAAmD;AACjD,WAAOkB,OAAO,CAAClB,KAAD,CAAd;AACD;;AACD,QAAMmB,oBAAoB,GAAGpB,GAAG,CAACqB,KAAJ,CAAU,kDAAV,CAA7B;AACA,QAAMC,QAAQ,GAAGF,oBAAH,oBAAGA,oBAAoB,CAAG,CAAH,CAArC;AACA,QAAMG,cAAc,GAAYtB,KAAM,CAACoB,KAAP,CAAa,kBAAb,CAAhC;;AACA,MAAIC,QAAQ,IAAI,CAACC,cAAjB,EAAiC;AAC/B,QAAID,QAAQ,KAAK,QAAjB,EAA2B;AACzB,aAAOH,OAAO,CAACK,MAAM,CAACC,MAAP,CAAcxB,KAAd,CAAD,CAAd;AACD;;AACD,QAAIqB,QAAQ,KAAK,QAAjB,EAA2B;AACzB,aAAOH,OAAO,CAACO,MAAM,CAACD,MAAP,CAAcxB,KAAd,CAAD,CAAd;AACD;AACF,GAPD,MAOO,IAAIsB,cAAJ,EAAoB;AACzB,WAAetB,KAAf;AACD;;AAED,SAAOkB,OAAO,CAACQ,WAAW,CAAC1B,KAAD,CAAZ,CAAd;AACD;;;;"}